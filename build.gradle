plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.jreverse'
version '1.0-SNAPSHOT'

task compileScriptingCore(type: JavaCompile) {
    // Set the source file to compile
    source = fileTree('src/main/java/com/jreverse/jreverse/Core').include('JReverseScriptingCore.java')

    classpath = sourceSets.main.compileClasspath

    setDestinationDirectory(file("src/main/java/com/jreverse/jreverse/Core"))

    // Set compilation options for the specific file
    options.compilerArgs = [
            // Add any specific compiler arguments here
            '-Xlint'
    ]

    // Set source and target compatibility
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

compileJava.dependsOn compileScriptingCore

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.jreverse.jreverse'
    mainClass = 'com.jreverse.jreverse.HelloApplication'
}

javafx {
    version = '17.0.6'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation group: 'org.javassist', name: 'javassist', version: '3.30.2-GA'
    implementation group: 'org.benf', name: 'cfr', version: '0.152'
    implementation 'org.python:jython-standalone:2.7.3'
    implementation 'org.openjdk.nashorn:nashorn-core:15.0'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}


